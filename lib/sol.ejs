contract <%= contract.name %> {

<%
  function annotationToString(_annotations){
    var res;
    if (_annotations && _annotations.length > 0) {
      res = _annotations.map(function(a){
        var strArg = (a.args) ? 
          a.args.map(arg=>{
            return "(" + arg.plasmaType + ' ' + arg.plasmaValue + ' => ' + arg.ethType + ")"
          }).join(", ")
        : ""
        return a.name + '  ' + strArg
      }).join("\n      ")
    }
    return res
  }

  for(var i=0;i < contract.clauses.length;i++) {
    const clause = contract.clauses[i];
%>
  /**
  * @dev <%= contract.name %>.<%= clause.name%>
  */
  function <%= clause.name %>(Tx transaction)
  internal
  pure
  {
    /*
    [annotations: client_verification&exit]
      <%= annotationToString(clause.annotations)  %>
    */

  }
<% } %>

}
