def swap(token, range, block_number, new_owner, prev_owner, c_token, c_range) := 
  with Bytes() as tx {
    eq(tx.adderss, Tx.address)
    and eq(tx.0, token)
    and within(tx.1, range)
    and eq(tx.2, block_number)
    and with SU() as c_su {
      assert(c_su.address, self.address)
      and assert(c_su.0, c_token)
      and assert(c_su.1, c_range)
      and assert(c_su.2, block_number)
      and assert(c_su.3, prev_owner)
      and assert(c_su.4, new_owner)
      and (IncludedAt(c_su) and IsValidSignature(tx, new_owner)) or (!IncludedAt(c_su) and IsValidSignature(tx, prev_owner))
    }
  }
