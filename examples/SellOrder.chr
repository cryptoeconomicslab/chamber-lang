contract SellOrder {

  @refundable
  constructor(){
    /* Stateful TXO initialization */
 
    // [implicit args]
    //   SimpleToken input
    //   String pairedTokenName
    //   Float price
    this.values = [input] 

    // No need for keys if you use same name with variables
    this.state = {
      pairedTokenName,
      price
    }
    
    /* Auto embedding items */
    // this.owners = input.owners
    // this.blkNum = undefined
  }

  @finish
  public clause exchange(output txo) onlyPair returns (output txo) {
    var owners = this.owners
    this.owners = txo.owners
    txo.owners = owners

    // Note: A sign of end of contract lifetime
    this.state = null

    // Note: "this" as a TXO is gonna be embedded to outputs
  }

  modifier onlyPair(output txo){
    require(txo.values[0].ticker == this.state.pairedTokenName, "Pair doesn't match")
    require(this.values[0].amount == this.state.price, 'Just put exactly same amount of paired token')
  }

}
