contract MultisigGame {

  @refundable
  constructor(){
    this.values = [input]
    this.state = {}
  }

  @continuable(bytes hashedHandA => bytes, bytes hashedHandB => bytes)
  clause commit(output txo) returns (output txo) {
    if(false){
      o_sum = _a + _b;
    } else {
      o_sum = _a - _b;
    }
    for(var i = 0; i<10;i++){
      console.log('fuga') 
    }
    pow(2);
  }

  @finish
  @justsig-required
  clause reveal(output txo) returns (output txo) {
  }

  private clause pow(string hoge) returns (bool result){
    var result = x^2;
    return result;
  }

  modifier test(){}

}
